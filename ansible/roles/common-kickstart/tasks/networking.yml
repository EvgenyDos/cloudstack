##  Responsible for base configuration of Hypervisor Networking
#
# Detect What interface name we have
# the 'em' interface is used by PXE/UNDI as an e1000 type card is emulated when
# PXE booting with Broadcom UNDI - dont use this card as a reliable detection
# method - remember also that 'em' is only 1Gbps

- name: Detect What system board we have
  command: /sbin/dmidecode -s system-product-name
  register: system_name

- name: Detect NIC is on BUS 01:00.0
  shell: /usr/sbin/lspci -s 01:00.0 -nvv | grep "Kernel modules:" | awk '{print $NF}'
  register: system_nic

- name: Test for Dell R620 ixgbe interfaces (Intel)
  set_fact:
    tm_interface_type: eno
    first_dev_num: 1
    last_dev_num: 2
  when: system_name.stdout == "PowerEdge R620" and (system_nic.stdout == "ixgbe" or system_nic.stdout == "tg3")
  ignore_errors: true

- name: Test for Dell R620 bnx2x interfaces (Broadcom)
  set_fact:
    tm_interface_type: eth
    first_dev_num: 1
    last_dev_num: 2
  when: system_name.stdout == "PowerEdge R620" and system_nic.stdout == "bnx2x"
  ignore_errors: true

- name: Test for Dell M620 interface
  set_fact:
    tm_interface_type: eth
    first_dev_num: 1
    last_dev_num: 2
  when: system_name.stdout == "PowerEdge M620"
  ignore_errors: true

- name: Test for Dell M640 interface
  set_fact:
    tm_interface_type: eno
    first_dev_num: 1
    last_dev_num: 2
  when: system_name.stdout == "PowerEdge M640"
  ignore_errors: true


- name: Test for HP DL160 Gen9
  set_fact:
    tm_interface_type: eth
    first_dev_num: 49
    last_dev_num: 50
  when: system_name.stdout == "ProLiant DL160 Gen9" and system_nic.stdout == "hpwdt"
  ignore_errors: true

- name: Primary NIC is [{{ tm_interface_type }}{{ first_dev_num }}], Secodard NIC is [{{ tm_interface_type }}{{ last_dev_num }}]
  set_fact:
    tm_primary_interface: "{{ tm_interface_type }}{{ first_dev_num }}"
    tm_secondary_interface: "{{ tm_interface_type }}{{ last_dev_num }}"
    found_interfaces: true
  when: (tm_interface_type is defined) and (first_dev_num is defined and last_dev_num is defined)

## Here we try to record the 'ksdevice' from the kernel boot parameters passed in as arguments
## during the PXE boot menu/config
- name: Record Kickstart Interface in ks_interface if it exists
  set_fact:
    ks_interface: "{{ ansible_cmdline.ksdevice }}"
    kicstarted: true
  when: ansible_cmdline.ksdevice is defined

- name: Display Kickstart Network Device
  debug:
    msg: "System booted from Kickstart Interface [{{ ks_interface }}]"
  when: ks_interface is defined

- name: Detect if we need to set hostname via the kickstart interface and not the primary interface 
  set_fact:
    kickstart_hack: true
  when: ks_interface is defined and ks_interface != tm_primary_interface

# Disable the NetworkManager service
- name: Make sure the NetworkManager service is disabled on boot
  ignore_errors: yes
  systemd:
    name: NetworkManager
    enabled: no
    masked: yes

# Disable the NetworkManager-wait-online service
- name: Make sure the NetworkManager-wait-online service is disabled on boot
  ignore_errors: yes
  systemd:
    name: NetworkManager-wait-online
    enabled: no
    masked: yes

# Set interfaces up
- name: "Setup Interface #1"
  template: src=ifcfg-iface1.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ tm_interface_type }}{{ first_dev_num }}
  when: found_interfaces is defined

- name: "Setup Interface #2"
  template: src=ifcfg-iface2.j2 dest=/etc/sysconfig/network-scripts/ifcfg-{{ tm_interface_type }}{{ last_dev_num }}
  when: found_interfaces is defined

- name: Setup Interface - bond0
  template: src=ifcfg-bond0.j2 dest=/etc/sysconfig/network-scripts/ifcfg-bond0
  when: found_interfaces is defined

- name: Remove old em1 interface from installer mis-detection
  file:
    state: absent
    path: /etc/sysconfig/network-scripts/ifcfg-em1
  when: ansible_em1 is defined and tm_interface_type != "em"
  ignore_errors: yes

- name: Remove old em2 interface from installer mis-detection
  file:
    state: absent
    path: /etc/sysconfig/network-scripts/ifcfg-em2
  when: ansible_em2 is defined and tm_interface_type != "em"
  ignore_errors: yes

- name: Remove old em3 interface from installer mis-detection
  file:
    state: absent
    path: /etc/sysconfig/network-scripts/ifcfg-em3
  when: ansible_em3 is defined
  ignore_errors: yes

- name: Remove old em4 interface from installer mis-detection
  file:
    state: absent
    path: /etc/sysconfig/network-scripts/ifcfg-em4
  when: ansible_em4 is defined
  ignore_errors: yes

## Remove iDrac interface
- name: Remove idrac interface from host, we dont use this
  file:
    state: absent
    path: /etc/sysconfig/network-scripts/ifcfg-idrac
  when: ansible_idrac is defined
  ignore_errors: yes
